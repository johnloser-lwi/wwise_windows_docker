@function invertLightness($color) {
    $lightness: lightness($color);
    $inverseLightness: (1 - ($lightness/100)) * 100;
    $outColor: change-color($color, $lightness: $inverseLightness);
    @return $outColor;
}

@function setAlpha($color, $alpha) {
    @return rgba(red($color), green($color), blue($color), $alpha);
}

@function gray($gray) {
    @return rgb($gray, $gray, $gray);
}

@function grayWithAlpha($gray, $alpha) {
    @return rgba($gray, $gray, $gray, $alpha);
}

//-- Raw Colors independent of usage ------------------------------------------- 
    $Raw_magenta_bright_pastel:     hsl(300, 100, 75);
    $Raw_magenta_bright:            hsl(300, 100, 50);
    $Raw_magenta_mid:               hsl(300, 52, 47);
    $Raw_red_pastel_light:          rgb(233, 125, 125);
    $Raw_red_pastel:                hsl(0,    80, 65);
    $Raw_red_bright_desaturated:    hsl(0,  100, 71);
    $Raw_red_bright:                hsl(0,   100, 60);
    $Raw_red_mid:                   hsl(0,   100, 36);
    $Raw_red_dark:                  hsl(3,  100, 20);
    $Raw_red_orange_bright:         hsl(12, 100, 43);
    $Raw_orange_saturated:          hsl(31, 100%, 51%);
    $Raw_orange_pastel:             hsl(31, 66%, 59%);
    $Raw_orange_mid:                hsl(31, 97%, 36%);
    $Raw_orange_bright:             hsl(41, 100, 50);
    $Raw_yellow_pastel:             hsl(52,   62, 54);
    $Raw_yellow_pure:               hsl(60, 100%, 50%);
    $Raw_yellow_bright:             hsl(57, 100%, 49%);
    $Raw_yellow_mid:                hsl(57,  100, 33);
    $Raw_yellow_mid_dark:           rgb(107, 102, 0);
    $Raw_yellow_dark:               hsl(45,   99, 14);
    $Raw_green_yellow_bright:       hsl(90, 100, 43);
    $Raw_green_pastel:              hsl(120, 35, 72);
    $Raw_green_bright:              hsl(120, 100, 50);
    $Raw_green_mid:                 hsl(120, 61, 48);
    $Raw_green_mid_dark:            rgb(26, 129, 26);
    $Raw_green_dark:                hsl(90, 100, 16);
    $Raw_aqua_bright_desaturated:   hsl(180, 100, 75);
    $Raw_aqua_bright:               hsl(180, 100, 50);
    $Raw_aqua_mid:                  rgb(46, 139, 139);
    $Raw_aqua_dark:                 hsl(180, 100, 19);
    $Raw_blue_pastel:               hsl(211, 100, 64);
    $Raw_blue_bright_desaturated:   hsl(215, 100, 68);
    $Raw_blue_bright:               hsl(196, 98,   50);
    $Raw_blue_mid:                  rgb(22, 113, 211);
    $Raw_blue_saturated:            hsl(235, 100%, 50%);
    $Raw_blue_dark:                 hsl(235, 100, 41);




//-- Colors by Application Usage -----------------------------------
    //-- Debug -------------------------------------
        $BitmapTint: setAlpha(rgb(182, 16, 224), 0 / 100);

    // Background colors
        $Root_Inset_Color:  white;
        $Root_Base_Color:   gray(140);
        $Root_Outset_Color: black;
        $Root_Structure_Color: black;
        $Root_Selected_Color: black;
        $Root_Text_Color: white;

        $Default_BG: $Root_Base_Color;
        $Tree_BG: $Default_BG;
        $List_BG: mix($Root_Inset_Color, $Root_Base_Color, 17);
        $Graph_BG: mix($Root_Outset_Color, $Root_Base_Color, 69%);
        $Menu_BG: gray(242);

        $Disabled_Mix_Percentage: 50%;
        $Selected_Mix_Percentage: 40%;
        $Selected_Partial_Mix_Percentage: 15%;

        $Root_Selected_Color: $Root_Selected_Color;
        $Selected_Border: $Root_Selected_Color;
        $Selected_BG: mix($Root_Selected_Color, $List_BG, $Selected_Mix_Percentage);
        $Selected_BG_Unfocused: mix($Selected_BG, $List_BG, 80%);
        $List_BG_SelectedOverlay: setAlpha($Root_Selected_Color, $Selected_Mix_Percentage);
        $List_BG_SelectedOverlayPartial: setAlpha($Root_Selected_Color, $Selected_Partial_Mix_Percentage);

        // Graph
        $Graph_BG_Disabled: mix($Graph_BG, $Default_BG, $Disabled_Mix_Percentage);
        $Graph_BG_Outside: mix($Graph_BG, $Default_BG, $Disabled_Mix_Percentage);
        $Graph_BG_Outside_Alternate: lighten($Graph_BG_Outside, 3%);

        // Structure Borders
        $StructureBorder: gray(100);
        $StructureBorder_Mid: mix($Root_Structure_Color, $Root_Base_Color, 46%); //gray(100);
        $StructureBorder_Strong: mix($Root_Structure_Color, $Root_Base_Color, 62%); //gray(70);
        $StructureBorder_Strongest: mix($Root_Structure_Color, $Root_Base_Color, 100%); //gray(0)
        $StructureBorder_Internal: mix($Root_Structure_Color, $Root_Base_Color, 18%); //gray(152);
        $StructureBorder_Internal_Weak: mix($Root_Structure_Color, $Root_Base_Color, 14%); //gray(160);

        $BehindDialogs: mix($Root_Structure_Color, $Root_Base_Color, 14%);

    //-- Accent Colors-------------------------------
        $Accent_Default:              rgb(83, 192, 231);
        $Accent_Default_Saturated:    rgb(0, 174, 238);
        $Accent_Default_Bright:       rgb(41, 198, 255);
        $Accent_Default_Dull:         rgb(55, 164, 204);

        $Accent_Mute:     $Accent_Default;
        $Accent_Mute_Inherited:  desaturate(darken($Accent_Mute, 10%), 30%);

        $Accent_Solo:     rgb(233, 206, 31);
        $Accent_Solo_Inherited:  darken($Accent_Solo, 10%);

        $Accent_Capture:  rgb(255, 98, 98);

        $Accent_ControlSurface: hsl(90, 100, 43);

        $Accent_Search: hsl(60, 100%, 50%);

        $Accent_Meter_OverRange: hsl(0, 60%, 58%); //Red
        $Accent_Meter_InRange1:  hsl(55, 100%, 36%); // Yellow
        $Accent_Meter_InRange0:  rgb(76, 162, 73); // Green
        $Accent_Meter_UnderRange:hsl(213, 60, 57); // Blue  

        $Graph_HDR_Window: setAlpha($Accent_Meter_UnderRange, 0.2);
    // Interaction Highlights
        $DragAndDrop_Drop_Hover: $Accent_Default_Saturated;
        $FocusedBorder: white;
        $FocusedErrorBorder: red;
        $SelectionLassoOverlay: setAlpha($Root_Selected_Color, 0.25);

    //-- Object Colors -------------------------------

        $ObjectColor_None: hsl(0, 0%, 53%);
        $ObjectColor_0: gray(170);
        $ObjectColor_1: hsl(231, 100%, 69%);
        $ObjectColor_2: hsl(216, 100%, 62%);
        $ObjectColor_3: hsl(187, 71%, 43%);
        $ObjectColor_4: hsl(116, 45%, 46%);
        $ObjectColor_5: hsl(76, 80%, 40%);
        $ObjectColor_6: hsl(55, 63%, 45%);
        $ObjectColor_7: hsl(37, 64%, 48%);
        $ObjectColor_8: hsl(26, 74%, 51%);
        $ObjectColor_9: hsl(5, 100%, 64%);
        $ObjectColor_10: hsl(353, 84%, 63%);
        $ObjectColor_11: hsl(304, 61%, 61%);
        $ObjectColor_12: hsl(289, 77%, 60%);
        $ObjectColor_13: hsl(271, 100%, 67%);
        
        // Versions of the same colors tinted with white
        $ObjectColor_14:  hsl(237, 71%, 74%);
        $ObjectColor_15:  hsl(220, 65%, 67%);
        $ObjectColor_16:  hsl(180, 27%, 62%);
        $ObjectColor_17:  hsl(120, 24%, 58%);
        $ObjectColor_18:  hsl(76, 33%, 58%);
        $ObjectColor_19:  hsl(56, 33%, 58%);
        $ObjectColor_20:  hsl(40, 37%, 65%);
        $ObjectColor_21:  hsl(31, 39%, 63%);
        $ObjectColor_22:  hsl(11, 38%, 63%);
        $ObjectColor_23:  hsl(0, 37%, 62%);
        $ObjectColor_24:  hsl(300, 36%, 60%);
        $ObjectColor_25:  hsl(280, 57%, 66%);
        $ObjectColor_26:  hsl(258, 79%, 71%);

    // -- For curves based on object color which are drawn with transparency ------------------

        $ObjectColorTransparent_None: hsl(0, 0%, 75%);
        $ObjectColorTransparent_0:  $ObjectColorTransparent_None;
        $ObjectColorTransparent_1:  hsl(237, 100%,  66%);
        $ObjectColorTransparent_2:  hsl(204, 100%,  58%);
        $ObjectColorTransparent_3:  hsl(180, 100%,  50%);
        $ObjectColorTransparent_4:  hsl(120, 100%,  50%);
        $ObjectColorTransparent_5:  hsl(77,  100%,  50%);
        $ObjectColorTransparent_6:  hsl(56,  100%,  50%);
        $ObjectColorTransparent_7:  hsl(40,  100%,  50%);
        $ObjectColorTransparent_8:  hsl(30,  100%,  50%);
        $ObjectColorTransparent_9:  hsl(20,  100%,  50%);
        $ObjectColorTransparent_10: hsl(360, 100%,  50%);
        $ObjectColorTransparent_11: hsl(300, 100%,  50%);
        $ObjectColorTransparent_12: hsl(280, 100%,  62%);
        $ObjectColorTransparent_13: hsl(271, 100%,  71%);

        // Versions of the same colors tinted with white
        $ObjectColorTransparent_14:  hsl(237, 100%,  72%);
        $ObjectColorTransparent_15:  hsl(220, 97%,   73%);
        $ObjectColorTransparent_16:  hsl(180, 78%,   73%);
        $ObjectColorTransparent_17:  hsl(120, 80%,   74%);
        $ObjectColorTransparent_18:  hsl(76,  80%,   71%);
        $ObjectColorTransparent_19:  hsl(40,  83%,   66%);
        $ObjectColorTransparent_20:  hsl(30,  100%,  70%);
        $ObjectColorTransparent_21:  hsl(40,  83%,   66%);
        $ObjectColorTransparent_22:  hsl(30,  100%,  70%);
        $ObjectColorTransparent_23:  hsl(20,  100%,  68%);
        $ObjectColorTransparent_24:  hsl(300, 100%,  72%);
        $ObjectColorTransparent_25:  hsl(280, 100%,  76%);
        $ObjectColorTransparent_26:  hsl(258, 100%,  75%);

    //-- Graph Curves-------------------------------
        // Curves which appear in graphs
        // Also good colors for good contrast on top of the graph background
        $Curve_Red_Lightened:         darken(hsl(0, 100%, 73%), 5);
        $Curve_Red:                   darken(hsl(0, 100%, 63%), 20);
        $Curve_Red_Saturated:         hsl(0,   100, 36);
        $Curve_Red_Pure:              rgb(255, 0, 0);
        $Curve_Red_Darkened:          hsl(0, 44%, 46%);
        $Curve_Red_Weak:              $Curve_Red_Lightened;
        $Curve_Red_Strong:            $Curve_Red_Darkened;

        $Curve_RedOrange_Lightened:   darken(hsl(9, 100%, 75%), 10);
        $Curve_RedOrange:             darken(hsl(9, 100%, 62%), 20);
        $Curve_RedOrange_Darkened:    hsl(9, 63%, 44%);
        $Curve_RedOrange_Weak:        $Curve_RedOrange_Lightened;
        $Curve_RedOrange_Strong:      $Curve_RedOrange_Darkened;

        $Curve_Orange_Lightened:      darken(hsl(27, 100%, 75%), 25);
        $Curve_Orange:                darken(hsl(27, 100%, 62%), 15);
        $Curve_Orange_Darkened:       hsl(27, 100%, 38%);
        $Curve_Orange_Weak:           $Curve_Orange_Lightened;
        $Curve_Orange_Strong:         $Curve_Orange_Darkened;

        $Curve_Yellow_Lightened:      darken(hsl(60, 100%, 83%), 15);
        $Curve_Yellow_Saturated:      hsl(54, 100%, 43%);
        $Curve_Yellow:                darken(hsl(54, 100%, 63%), 35);
        $Curve_Yellow_Darkened:       darken(hsl(54, 57%, 45%), 10);
        $Curve_Yellow_Weak:           $Curve_Yellow_Lightened;
        $Curve_Yellow_Strong:         $Curve_Yellow_Darkened;

        $Curve_YellowGreen_Lightened: darken(hsl(80, 100%, 81%), 15);
        $Curve_YellowGreen:           darken(hsl(80, 87%, 59%), 1);
        $Curve_YellowGreen_Darkened:  darken(hsl(80, 58%, 42%), 10);
        $Curve_YellowGreen_Weak:      $Curve_YellowGreen_Lightened;
        $Curve_YellowGreen_Strong:    hsl(80, 59%, 27%);

        $Curve_Green_Lightened:       darken(hsl(120, 50%, 72%), 14);
        $Curve_Green:                 hsl(120, 100%, 27%);
        $Curve_Green_Saturated:       hsl(120, 61, 48);
        $Curve_Green_Darkened:        darken(hsl(120, 61%, 34%), 10);
        $Curve_Green_Weak:            $Curve_Green_Lightened;
        $Curve_Green_Strong:          $Curve_Green_Darkened;

        $Curve_AquaBlue_Lightened:    darken(hsl(198, 100%, 75%), 15);
        $Curve_AquaBlue:              darken(hsl(198, 100%, 64%), 25);
        $Curve_AquaBlue_Darkened:     hsl(198, 100%, 36%);
        $Curve_AquaBlue_Weak:         $Curve_AquaBlue_Lightened;
        $Curve_AquaBlue_Strong:       $Curve_AquaBlue_Darkened;

        $Curve_Blue_Saturated:        hsl(202, 100%, 50%);
        $Curve_Blue_Lightened:        darken(hsl(210, 100%, 67%), 20);
        $Curve_Blue:                  hsl(210, 100%, 50%);
        $Curve_Blue_Darkened:         hsl(210, 100%, 38%);
        $Curve_Blue_Weak:             $Curve_Blue_Lightened;
        $Curve_Blue_Strong:           $Curve_Blue_Darkened;

        $Curve_RoyalBlue_Lightened:   hsl(236, 100%, 70%);
        $Curve_RoyalBlue:             hsl(236, 100%, 49%);
        $Curve_RoyalBlue_Darkened:    hsl(236, 59%, 46%);
        $Curve_RoyalBlue_Weak:        $Curve_RoyalBlue_Lightened;
        $Curve_RoyalBlue_Strong:      $Curve_RoyalBlue_Darkened;

        $Curve_Purple_Lightened:      darken(hsl(270, 100%, 72%), 7);
        $Curve_Purple:                hsl(270, 87%, 59%);
        $Curve_Purple_Darkened:       hsl(270, 58%, 43%);
        $Curve_Purple_Weak:           $Curve_Purple_Lightened;
        $Curve_Purple_Strong:         $Curve_Purple_Darkened;

        $Curve_Pink_Lightened:        darken(hsl(324, 100%, 73%), 10);
        $Curve_Pink:                  hsl(324, 87%, 59%);
        $Curve_Pink_Darkened:         hsl(324, 58%, 47%);
        $Curve_Pink_Weak:             $Curve_Pink_Lightened;
        $Curve_Pink_Strong:           $Curve_Pink_Darkened;

        $Curve_Brown_Lightened:       darken(hsl(30, 92%, 67%), 20);
        $Curve_Brown:                 hsl(30, 58%, 50%);
        $Curve_Brown_Darkened:        hsl(30, 60%, 38%);
        $Curve_Brown_Weak:            $Curve_Brown_Lightened;
        $Curve_Brown_Strong:          $Curve_Brown_Darkened;

        $Curve_GrayBrown_Lightened:   darken(hsl(29, 66%, 64%), 20);
        $Curve_GrayBrown:             hsl(29, 35%, 47%);
        $Curve_GrayBrown_Darkened:    hsl(29, 37%, 36%);
        $Curve_GrayBrown_Weak:        $Curve_GrayBrown_Lightened;
        $Curve_GrayBrown_Strong:      $Curve_GrayBrown_Darkened;

        $Curve_Gray_Lightened:        hsl(0, 1%, 57%);
        $Curve_Gray:                  hsl(0, 0%, 35%);
        $Curve_Gray_Darkened:         hsl(0, 0%, 27%);
        $Curve_Gray_Weak:             $Curve_Gray_Lightened;
        $Curve_Gray_Strong:           $Curve_Gray_Darkened;

        // Fade Curve used in clips & wave/source editors
        $Curve_Fade:                  hsl(196, 79%, 63%);
        $Curve_Crossfade:             hsl(27, 100%, 62%);
        $Curve_Volume:                $Curve_Red;
        $Curve_LowPass:               $Curve_Blue;
        $Curve_HighPass:              $Curve_AquaBlue_Lightened;

    //-- Text -------------------------------
        $Text_Label: $Root_Text_Color;
        $Text_Mid: mix($Root_Text_Color, $Root_Base_Color, 75%);
        $Text_Strong: $Root_Text_Color;
        $Text_Strongest: $Root_Text_Color;

        $Text_Selected: $Root_Inset_Color;
        $Text_SelectedDisabled: mix($Text_Selected, $Selected_BG, $Disabled_Mix_Percentage); //gray(185);
        $Text_Label_Disabled: mix($Text_Label, $Default_BG, 35%); //gray(128);

        $Text_Green:           $Raw_green_dark;
        $Text_Green_Selected:  $Raw_green_bright;

        $Text_Yellow:          $Raw_yellow_dark;
        $Text_Yellow_Selected: $Raw_yellow_bright;

        $Text_Red:             $Raw_red_mid;
        $Text_Red_Selected:    $Raw_red_bright_desaturated;

        $Text_Blue:            $Raw_blue_dark;
        $Text_Blue_Selected:   mix($Raw_blue_bright, $Raw_aqua_bright_desaturated, 50%);


    //-- Dialog (Main Window and Nested/Floating Windows) -------------------------------

        // Background color behind/between all the docked views
        $Separator: $BehindDialogs; // Expandable Heading Block
        $Separator_Hovered: mix($Accent_Default, $Separator, 70%); // Expandable Heading Block

        // Dialog Title bars
        $Dialog_TitleBar_BG: setAlpha($BehindDialogs, 0.7); // Background for Main title bar, 0.7 is how much it will blend with the project color
        $Dialog_TitleBar_Text: gray(59);
        $Dialog_TitleBar_Border_Focused: $Root_Structure_Color;
        $Dialog_TitleBar_Border_Unfocused: mix($Root_Structure_Color, $BehindDialogs, 50%);

        // Title Bar Menus
        $Dialog_TitleBar_MenuTitle_Hovered: mix($Selected_BG, $Dialog_TitleBar_BG, 20);
        $Dialog_TitleBar_MenuTitle_Pressed: $Dialog_TitleBar_MenuTitle_Hovered;
        
        // Views inside Wwise which can be nested or floating windows
        $Dialog_BG_Focused: gray(233);
        $Dialog_BG_Unfocused: $Default_BG;
        $Dialog_Border_Focused: $Dialog_BG_Focused;
        $Dialog_Border_Unfocused: gray(30);
        $Dialog_Floating_Top_Border: $Dialog_Border_Unfocused;
        $Dialog_Text_Focused: black;

        //-- Menu -------------------------------
        $Menu_BG_Selected: rgb(145, 201, 247);
        $Menu_BG_SelectedDisabled: mix($Menu_BG_Selected, $Menu_BG, $Disabled_Mix_Percentage);
        $Menu_Text: black;
        $Menu_Text_Disabled: mix($Menu_Text, $Menu_BG, $Disabled_Mix_Percentage);
        $Menu_Separator: mix($Menu_Text, $Menu_BG, 15%);

        // Tabbed View
        $Tab_BG_Focused: $Default_BG;
        $Tab_BG_Unfocused: gray(130); //gray(163);
        $Tab_BG_Unfocused_Hovered: $Tab_BG_Focused;

        $Tab_Border_Focused: gray(206);
        $Tab_Border_Unfocused: $StructureBorder;
        $Tab_Border_Unfocused_Hovered: gray(190);

        $Tab_Text_Focused: $Text_Strongest;
        $Tab_Text_Unfocused: gray(220);
        $Tab_Text_UnfocusedHovered: $Text_Mid;

        // Group Box
        $GroupBox_Border: gray(171);
        $GroupBox_Text: $Text_Label;

        $Splitter_Dark: mix($StructureBorder, $StructureBorder_Mid, 50);
        $Splitter_Light: lighten($Default_BG, 10);


    //-- Tray - Node Box, Track Header etc -------------------------------
        $Tray_TitleBox_Selected_Mix_Percentage: 40%;

        $Tray_TitleBox_BG: gray(180);
        $Tray_TitleBox_BG_Selected: mix($Root_Selected_Color, $Tray_TitleBox_BG, $Tray_TitleBox_Selected_Mix_Percentage);
        // Incorrectly applied on Track Headers as opaque color when object color is default
        $Tray_TitleBox_BG_SelectedOverlay: setAlpha(mix($Root_Selected_Color, $Root_Inset_Color, 80%), $Tray_TitleBox_Selected_Mix_Percentage); 
        // Color Overlayed over the object color
        $Tray_TitleBox_BG_DefaultColorOverlay: setAlpha($Tray_TitleBox_BG, 0.1);

        $Tray_TitleBox_Text:                  black;
        $Tray_TitleBox_Text_Disabled:         mix($Tray_TitleBox_Text, $Tray_TitleBox_BG, $Disabled_Mix_Percentage);
        $Tray_TitleBox_Text_Excluded:         $Tray_TitleBox_Text_Disabled;
        $Tray_TitleBox_Text_ExcludedSelected: $Text_SelectedDisabled;

        $Tray_Border_Floating:   mix($Root_Outset_Color, $Default_BG, 30);
        $Tray_Border_Selected:   $Selected_Border;
        $Tray_Border_Hovered:    mix($Tray_Border_Selected, $Tray_Border_Floating, 40%); //was gray(60);
        $Tray_Border_Active:     mix($Selected_Border, $Default_BG, 70);

        // Used in Mixing Desk
        $Tray_CenterBG_ObjectColorBlendRatio: setAlpha(black, 0.1);
        $Tray_CenterBG_Selected: mix($Selected_BG, $Default_BG, 20);


    //-- Tree & List -------------------------------
        $Tree_Text: $Text_Strong;

        // List/Column Header
        $List_BG_Selected: mix($Root_Selected_Color, $List_BG, $Selected_Mix_Percentage);
        $List_BG_RelatedToSelected: mix($Root_Selected_Color, $List_BG, $Selected_Partial_Mix_Percentage);
        $List_BG_RelatedBorderTop: darken($List_BG_RelatedToSelected, 1%);
        $List_BG_RelatedBorderBottom: $List_BG_RelatedBorderTop;
        $List_BG_SelectedUnfocused: mix($List_BG_Selected, $List_BG, 75%);

        $List_Header_BG: mix($Root_Outset_Color, $Default_BG, 20%);
        $List_Header_BG_Disabled: mix($List_Header_BG, $List_BG, $Disabled_Mix_Percentage);
        $List_Header_BG_Hovered: mix($Root_Selected_Color, $List_Header_BG, 12%);//gray(160);
        $List_Header_BG_Pressed: mix($Root_Selected_Color, $List_Header_BG, 30%);
        $List_Header_Border: gray(75);
        $List_Header_ColumnSeparator: mix($Text_Mid, $List_Header_BG, 50%);
 
        $List_Header_Text: $Text_Mid;
        $List_Header_Text_Disabled: mix($List_Header_Text, $List_Header_BG, 75%);
        $List_Header_Text_Hovered: $Text_Strongest;

        $List_Text: $Tree_Text;
        $List_Text_Disabled: mix($List_Text, $List_BG, $Disabled_Mix_Percentage);
        
        // Used for Parent Rows
        $List_Text_Strong: $Tree_Text;
        // Used for values of decendents of parent rows which sum up to the parent row's value 
        $List_Text_Weak: mix($List_Text_Strong, $List_BG, 60%);
        
        // Colored text for differentiation, not in Use
        $List_Text_Alternate1_Strong: hsl(4, 34%, 36%);
        $List_Text_Alternate1_Weak:mix($List_Text_Alternate1_Strong, $List_BG, 70);
        $List_Text_Alternate2_Strong: hsl(112, 100%, 20%);
        $List_Text_Alternate2_Weak: mix($List_Text_Alternate2_Strong, $List_BG, 70);

        //List with alternating row colors

        // Row 1 - The darker row
        $List_Row1_BG: darken($List_BG, 2%);
        $List_Row1_BorderTop: darken($List_Row1_BG, 1%);
        $List_Row1_BorderBottom: $List_Row1_BorderTop;
        // Row 2 - The lighter row
        $List_Row2_BG: $List_BG;
        $List_Row2_BorderTop: lighten($List_Row2_BG, 1%);
        $List_Row2_BorderBottom: $List_Row2_BorderTop;

        // Hierarchy Row
        $List_RowParent_BG: mix($Root_Structure_Color, $List_BG, 24%);
        $List_RowParent_BorderTop: lighten($List_RowParent_BG, 7%);
        $List_RowParent_BorderBottom: darken($List_RowParent_BG, 12%);

        // Sub-Hierarchy row
        $List_RowSubParent_BG: lighten($List_RowParent_BG, 8%);
        $List_RowSubParent_BorderTop: lighten($List_RowParent_BorderTop, 8%);
        $List_RowSubParent_BorderBottom: lighten($List_RowParent_BorderBottom, 5%);

        // List Selection Gutter
        $List_SideSelection_Gutter: $List_Row2_BG;
        $List_SideSelection: mix($Root_Selected_Color, $List_SideSelection_Gutter, $Selected_Mix_Percentage);
        $List_SideSelection_Partial: mix($List_SideSelection, $List_SideSelection_Gutter, $Selected_Partial_Mix_Percentage);

        $FxPlatformRestricted: setAlpha($Accent_Default, 0.3);

        // Used in Sequence Editor and Query editor
        $TreeLine: mix($Tree_Text, $Tree_BG, $Disabled_Mix_Percentage);

        $CaptureLog_Message_Overlay: setAlpha($List_BG, 0.2);
        
        $CaptureLog_TimeBullet_Max: aqua;
        $CaptureLog_TimeBullet_Min: mix($CaptureLog_TimeBullet_Max, $List_BG, 50%);

        $CaptureLog_RelatedBullet: mix($Root_Selected_Color, $List_BG, 80%);
        $CaptureLog_RelatedBullet_Border: mix(white, $List_BG, 50%);

    //-- Buttons-------------------------------
        $Button_BG: lighten($Default_BG, 9.75%);
        $Button_BG_Disabled: mix($Button_BG, $Default_BG, 50%);
        $Button_BG_HoveredOverlay: setAlpha(white, 0.30);
        $Button_BG_HoveredOpaque: mix(white, $Default_BG, 30%);
        $Button_BG_Pressed: $StructureBorder_Mid;
        $Button_BG_Checked: $Accent_Default;
        $Button_BG_CheckedHovered: lighten($Accent_Default, 10%);
        $Button_BG_Learn: setAlpha($Accent_ControlSurface, 0.2);

        $Button_OuterBorder: gray(112); // Used for Combo and Button
        $Button_OuterBorderDisabled: mix($Button_OuterBorder, $Default_BG, 70%); // Used for Combo and Button

        // Alpha is used as a lightness adjustement factor, the other components are not used.
        $Button_InnerBorderLightness: grayWithAlpha(255, 0.07);
        $Button_DisabledInnerBorderLightness: grayWithAlpha(255, 0.00);

        // Button Text
        $Button_Text: $Text_Strong;
        $Button_Text_Pressed: white;
        $Button_Text_Disabled: mix($Button_Text, $Button_BG_Disabled, 30%);
        $Button_Text_Hovered: mix($Text_Strongest, $Text_Strong, 15%);
        $Button_Text_Checked: black;
        $Button_Text_CheckedPressed: $Button_Text_Pressed;
        $Button_Text_CheckedDisabled: mix($Button_Text_Checked, $Button_BG_Disabled, 30%);
        $Button_Text_CheckedHovered: lighten($Button_Text_Checked, 10%);

        // Colored Buttons
        $ColoredButton_Blue_BG_Checked:     $Curve_Blue_Saturated;
        $ColoredButton_Blue_BG:             mix($ColoredButton_Blue_BG_Checked, $Button_BG, 15%); //, 5%);

        $ColoredButton_AquaBlue_BG_Checked: $Curve_AquaBlue_Lightened;
        $ColoredButton_AquaBlue_BG:         mix($ColoredButton_AquaBlue_BG_Checked, $Button_BG, 20%); //, 5%);

        $ColoredButton_Green_BG_Checked:    $Curve_Green_Saturated;
        $ColoredButton_Green_BG:            mix($ColoredButton_Green_BG_Checked, $Button_BG, 15%); //, 5%);

        $ColoredButton_YellowGreen_BG_Checked: $Curve_YellowGreen;
        $ColoredButton_YellowGreen_BG:      mix($ColoredButton_YellowGreen_BG_Checked, $Button_BG, 15%); //, 5%);

        $ColoredButton_Yellow_BG_Checked:   $Curve_Yellow_Saturated;
        $ColoredButton_Yellow_BG:           mix($ColoredButton_Yellow_BG_Checked, $Button_BG, 15%); //, 5%);

        $ColoredButton_Orange_BG_Checked:   hsl(36, 100%, 50%);
        $ColoredButton_Orange_BG:           mix($ColoredButton_Orange_BG_Checked, $Button_BG, 15%); //, 5%);

        $ColoredButton_Pink_BG_Checked:     lighten($Curve_Pink_Lightened, 10%);
        $ColoredButton_Pink_BG:             desaturate(mix($ColoredButton_Pink_BG_Checked, $Default_BG, 25%), 5%);
        
        $ColoredButton_Purple_BG_Checked:   lighten($Curve_Purple_Lightened, 10%);
        $ColoredButton_Purple_BG:           desaturate(mix($ColoredButton_Purple_BG_Checked, $Default_BG, 25%), 5%);

        // Titlebar Buttons
        $TitleBar_Button_BG_Hovered: mix(white, $Dialog_TitleBar_BG, 20%);
        $TitleBar_CloseButton_BG_Hovered:   hsl(355, 86%, 49%);
        $TitleBar_CloseButton_BG_Pressed: hsl(355, 100%, 20%);

    //-- Controls, Fields -------------------------------
        $Handle_BG: rgb(96, 172, 195);
        $Handle_Border: rgb(34, 82, 97);

        // Fields
        $Field_BG: mix($Root_Inset_Color, $List_BG, 3%);
        $Field_BG_Disabled: mix($Field_BG, $Default_BG, 35%);

        $Field_Border_Outer: mix($StructureBorder_Strongest, $Field_BG, 30%);
        $Field_Error_Border_Outer: darkred;
        $Field_Border_Outer_Disabled: mix($Field_Border_Outer, $Default_BG, 35%);
        
        $Field_InnerShadow: mix($Field_Border_Outer, $Field_BG, 25%);

        $Field_Text: $Text_Strong;
        $Field_Text_Disabled: gray(115);
        $Field_ControlSurfaceLearning: setAlpha($Accent_ControlSurface, 0.2);
        $Field_Text_Hint: mix($Field_Text, $Field_BG, 30%);

        // Control inside field
        $Field_InternalControl: mix($Root_Outset_Color, $Field_BG, 40);
        $Field_InternalControl_Disabled: mix($Field_InternalControl, $Field_BG, $Disabled_Mix_Percentage);
        $Field_InternalControl_Hovered: mix($Root_Outset_Color, $Field_InternalControl, 60%);
        $Field_InternalControl_Pressed: mix($Root_Outset_Color, $Field_InternalControl, 100%);

        // Combobox
        $Combo_BG: $Field_BG;
        $Combo_BG_Disabled: $Field_BG_Disabled;
        $Combo_Border_Inner: $Combo_BG;
        $Combo_Border_Inner_Disabled: $Combo_BG_Disabled;
        $Combo_Border_Outer: $Field_Border_Outer; 
        $Combo_Border_Outer_Disabled: $Field_Border_Outer_Disabled;

        // Slider
        $Slider_Handle: $Root_Outset_Color;
        $Slider_Handle_Disabled: mix($Slider_Handle, $Field_BG_Disabled, 20%);
        $Slider_InternalShadow: $Field_BG;
        $Slider_ActiveLine: $Accent_Default_Bright;
        $Slider_ActiveLine_Shadow: darken($Slider_ActiveLine, 16);
        $Slider_ActiveLine_Disabled: mix($Slider_Handle_Disabled, $Field_BG_Disabled, 30%);
        $Slider_ActiveLineShadow_Disabled: mix($Slider_Handle_Disabled, $Field_BG_Disabled, 10%);

        // Feedback Slider
        // Used for live profiling feedback in Soundseed Grain, but eventually will be used more places across Wwise
        $FeedbackSlider_MinMaxValues: mix($Root_Outset_Color, $Field_BG, 30%);
        $FeedbackSlider_MinMaxRange:  mix($Root_Outset_Color, $Field_BG, 18%);
        $FeedbackSlider_CurrentValue: $Curve_RoyalBlue;
        $FeedbackSlider_BallisticRange: mix(mix($Curve_Blue, $Accent_Default_Bright, 60), $Field_BG, 60%);

        $FeedbackSlider_Disabled: mix($Field_Border_Outer_Disabled, $Default_BG, 50);
        $FeedbackSlider_NoProfiling: mix($Field_Border_Outer_Disabled, $Default_BG, 80);

        // Scroll Bar
        $Scroll_Track: mix($List_BG, $Default_BG, 80%);
        $Scroll_DragBar: mix($Root_Selected_Color, $Scroll_Track, 25%);
        $Scroll_DragBarHover: mix($Root_Selected_Color, $Scroll_DragBar, 20%);

        // Fader
        $Fader_ActiveLine1:  $Accent_Default_Bright;
        $Fader_ActiveLine2: darken( $Slider_ActiveLine, 25);
        $Fader_Disabled: setAlpha($Default_BG, 0.5);
        $Fader_Range_Ticks: $StructureBorder;
        $Fader_ZeroMarker_Top: gray(115);
        $Fader_ZeroMarker_Bottom: gray(170);

        // MiniCone
        $MiniCone_Circle: $StructureBorder;
        $MiniCone_Cone: setAlpha($Graph_BG, 0.45);

        $Notes_Border_Hover: mix($Field_Border_Outer, $StructureBorder_Strongest, 60%);

        //-- Generic Color Chip ---------------
        $ColorChip_Border: $StructureBorder_Strong;
        $ColorChip_DisabledOverlay: rgba($Default_BG, 0.5);

        //-- Object Color Chip --------------------
        // Alpha is used to specify how much of the border color is blended with the palette color.
        $ObjectColorChip_Border: setAlpha($StructureBorder_Strongest, 0.30);
        $ObjectColorChip_Border_Disabled: setAlpha($Default_BG, 0.25);
        $ObjectColorChip_DisabledOverlay: setAlpha($Default_BG, 0.25);
        $ObjectColorChip_Border_Focused: setAlpha($Root_Selected_Color, 0.7);
        $ObjectColorChip_Border_Selected: setAlpha($Root_Selected_Color, 0.5);
        $ObjectColorChip_Border_SelectedFocused: setAlpha($Root_Selected_Color, 0.7);
        $ObjectColorChip_BorderInheritedColor: setAlpha($Root_Selected_Color, 0.5);

        $ObjectColorChip_IndeterminateBG: mix($Graph_BG, $ObjectColor_None, 35%);
        $ObjectColorChip_IndeterminateDash: mix($Field_Text, $ObjectColorChip_IndeterminateBG, 60%);

        $ObjectColorChip_NoObject: mix($Root_Selected_Color, $Default_BG, 7%);


    //-- Progress Bars & Status -----------------------------

        $SuccessText: $Text_Green;
        $SuccessTextSelected: $Text_Green_Selected;

        $MessageText: $Text_Mid;
        $MessageTextSelected: $Text_Selected;

        $WarningText: $Text_Yellow;
        $WarningTextSelected: $Text_Yellow_Selected;

        $UnconvertedText: $Text_Blue;
        $UnconvertedTextSelected: $Text_Blue_Selected;

        $ErrorText: $Text_Red;
        $ErrorTextSelected: $Text_Red_Selected;

        $FatalErrorText: $Text_Strongest;
        $FatalErrorTextSelected: $Text_Selected;

        $UnknownSeverityText: $Text_Strongest;
        $UnknownSeverityTextSelected: $Text_Selected;

        // Cell background color for errors and warnings
        $Cell_Error_BG:  $Raw_red_pastel;
        $Cell_Warning_BG: $Raw_yellow_pastel;

        $Progress_Filled: $Accent_Default;
        $Progress_Unfilled: $List_BG; //Same as Graph Background
        $Progress_UnfilledGradientTop: mix($Root_Structure_Color, $Progress_Unfilled, 20%);



    //-- Timeline Ruler ------------------------------
        $Ruler_BG: $Graph_BG_Outside;
        $Ruler_Frame: $StructureBorder; // Time Ruler Border
        $Ruler_Text: mix($Text_Label, $Ruler_BG, 70);
        $Ruler_TextLarge: $Text_Label;
        $Ruler_TickSmall: mix($Text_Label, $Ruler_BG, 30);
        $Ruler_TickMedium: mix($Text_Label, $Ruler_BG, 40);
        $Ruler_TickLarge: mix($Text_Label, $Ruler_BG, 50);
        $Ruler_Axis: mix($Text_Label, $Ruler_BG, 45);
        $Ruler_AxisTextColor: $Text_Mid;

    //-- Graph -------------------------------
        $Graph_GridAxis: $Ruler_Axis; //gray(125);
        $Graph_GridLine: mix($Graph_GridAxis, $Graph_BG, 10%);

    //-- Meter ---------------------------------------
        $Meter_BG: gray(48);
        $Meter_GridLine: gray(57);
        $Meter_Text: gray(160);
        $Meter_HeaderText: gray(210);
        $Meter_HistoryHeaderText:  hsl(30, 75%, 53%);

        $Meter_OverRange:  $Accent_Meter_OverRange;  //Red
        $Meter_InRange1:   $Accent_Meter_InRange1;   // Yellow
        $Meter_InRange0:   $Accent_Meter_InRange0;   // Green
        $Meter_UnderRange: $Accent_Meter_UnderRange; // Blue

    //-- Node Graph-------------------------------
        $NodeGraph_BG: mix($List_BG, $Default_BG, 75%);
        $NodeGraph_BG_Disabled: $NodeGraph_BG;
        
        $NodeGraph_Wire: mix($Selected_Border, $Graph_BG, 58); //Orig gray(90);
        $NodeGraph_Wire_Hovered: mix($Selected_Border, $Graph_BG, 72); //Orig gray(60);
        $NodeGraph_Wire_Selected: $Selected_Border;

        $NodeGraph_WireFeedback: $Raw_red_bright;
        $NodeGraph_WireFeedback_Hovered: darken($NodeGraph_WireFeedback, 10);
        $NodeGraph_WireFeedback_Selected: lighten($NodeGraph_WireFeedback, 20);
        
        $NodeGraph_WireMute_Active: saturate(darken($Accent_Mute, 15%), 2%);
        $NodeGraph_WireMute_Hovered: mix($NodeGraph_WireMute_Active, $NodeGraph_BG, 85%);
        $NodeGraph_WireMute: mix($NodeGraph_WireMute_Active, $NodeGraph_BG, 60%);

        $NodeGraph_WireSolo_Active: saturate(darken($Accent_Solo, 24%), 25%);
        $NodeGraph_WireSolo_Hovered: mix($NodeGraph_WireSolo_Active, $NodeGraph_BG, 85%);
        $NodeGraph_WireSolo: mix($NodeGraph_WireSolo_Active, $NodeGraph_BG, 60%);

        $NodeGraph_DeviceNode: $Tray_TitleBox_BG;

        // Node Box
        $NodeGraph_NodeBorder: $Tray_Border_Floating;
        $NodeGraph_NodeBorder_Hovered: $Tray_Border_Hovered;
        $NodeGraph_NodeBorder_Active: $Tray_Border_Selected;
        $NodeGraph_NodeBorder_Selected: $Tray_Border_Selected;

        $NodeGraph_Node_Numeric_BG: gray(210);
        $NodeGraph_Node_Text: black;

        // Game object group box which a number of nodes sit inside
        $NodeGraph_GroupBox_BG: mix($Root_Outset_Color, $NodeGraph_BG, 5%);
        $NodeGraph_GroupBox_Border: mix($Root_Outset_Color, $NodeGraph_BG, 15%);
        $NodeGraph_GroupBox_TitleBox: mix($Tray_TitleBox_BG, $NodeGraph_BG, 75%);

        $NodeGraph_VirtualVoice_BG: $Field_BG;
        $NodeGraph_EffectsRow_BG: mix($Accent_Default, $Default_BG, 80%);
        $NodeGraph_MixerRow_BG: mix($Accent_Default, $Default_BG, 40%);

        // Cues and Markers
        $Cursor_Time:  aqua;
        $Cursor_LatestCaptureTime:  $Curve_Red_Saturated;
        $Cursor_Entry: $Curve_Green;
        $Cursor_Exit:  $Curve_Red;

    //-- Graph (Numeric Graph) -------------------------------

        //-- Graph Points --
            $Graph_Point_BG: gray(200);
            $Graph_Point_BG_Selected: gray(90);
            $Graph_Point_Border: gray(60);
            $Graph_Point_Border_Selected: $Graph_Point_Border;
            $Graph_Point_HoverOverlay: setAlpha($Root_Selected_Color, 0.2);

            $Graph_Point_SelectedUnfocused: $Graph_Point_BG_Selected;
            $Graph_Point_BorderUnfocused: $Graph_Point_Border_Selected;

        $Graph_FadeHandle: $Handle_BG;
        $Graph_FadeHandle_Border: $Handle_Border;
        $Graph_FadeHandle_Selected: $Graph_Point_BG_Selected;
        $Graph_FadeHandle_Disabled: mix($Graph_FadeHandle_Border, $Graph_BG, 40); 

        $Graph_Curve_HoverOverlay: setAlpha(white, 0.9);

        //-- ??? Not sure what these are affecting
        $GraphControl_OuterRadius: mix($Graph_GridAxis, $Graph_BG, 0%);
        $GraphControl_MidRadius: mix($Graph_GridAxis, $Graph_BG, 30%);
        $GraphControl_Cone: setAlpha($Curve_AquaBlue, 0.07);
        $GraphControl_HighlightedSegment: mix($Curve_AquaBlue, $Selected_BG, 70%);
        $GraphControl_EvaluatedPoint: setAlpha($Accent_Default, 0.25);

        // Graph Cursors
            // Flags for cursor like game parameter
            $Graph_CursorBase: white;
            $Graph_CursorBase_Selected: white;
            $Graph_CursorBase_Shadow: mix(black, white, 80%);

            // Used for Begin and End in Convolution Reverb
            $Graph_CursorBase_ShadowTransparent: mix($Graph_CursorBase, $Graph_BG, 60%);
            
            // Vertical line to right of cursor
            $Graph_CursorBase_ShadowHover: $Root_Inset_Color;

            $Graph_CursorBase_Flag: gray(97);

            // Color for Game Object Cursor when capturing and 'Show Game Objects' is on in RTPC editor
            $Graph_CursorBase_Flag_GameObject: mix($Root_Inset_Color, $Graph_CursorBase_Flag, 6%);
            // When user hovers over game object cursor both original cursor and game object cursor highlight this color
            $Graph_CursorBase_Flag_Hover: gray(80);
            $Graph_CursorBase_Flag_Dragged: gray(70);
            // Doesn't seem to be used
            $Graph_CursorBase_Flag_DraggedHovered: $Graph_CursorBase_Flag_Hover;

            $Graph_CursorBase_Text: mix($Text_Label, $Graph_BG, 95%);
            $Graph_CursorBase_Text_Dragged: $Text_Strongest;

            // Cursor which trails the one changed by the user, it shows the last sample from the game object
            $Graph_CursorTrail_Line: mix($Graph_CursorBase, $Graph_BG, 50%);
            $Graph_CursorTrail_Line_Hovered: $Graph_CursorBase;

            // Not sure if these are used
            $Graph_CursorTrail_Flag: $Graph_CursorBase_Flag;
            $Graph_CursorTrail_Flag_Default: $Graph_CursorBase_Flag;
            $Graph_CursorTrail_Text: $Graph_CursorBase_Text;

            // Custom Cue flag Shadow color
            $Graph_CursorCustomCue_Line: mix($Root_Outset_Color, $Accent_Default_Dull, 30);
            $Graph_CursorCustomCue_Flag_BG: $Tray_TitleBox_BG;
            $Graph_CursorCustomCue_Flag_BG_Disabled: mix($Graph_CursorCustomCue_Flag_BG, $Default_BG, 60);
            $Graph_CursorCustomCue_Flag_Shadow: mix($StructureBorder_Strong, $Default_BG, 50%);
            $Graph_CursorCustomCue_Flag_Shadow_Disabled: mix($Graph_CursorCustomCue_Flag_Shadow, $Default_BG, 60);

            // Standard cursor with flag, used for Event Cue
            $Graph_CursorStandardCue_Border:  mix($StructureBorder, $StructureBorder_Strong, 50);
            $Graph_CursorStandardCue_Border_Selected: setAlpha($Selected_Border, 0.1);
            $Graph_CursorStandardCue_Text_Border: setAlpha($Tray_TitleBox_BG, 0); //Used by Wwise but can't see it anywhere
            $Graph_CursorStandardCue_Border_BrightenFactor: setAlpha(black, 0.05); // Only alpha is used
            $Graph_CursorStandardCue_Pole_BrightenFactor: setAlpha(black, 0.3); // Only alpha is used

     // -- Graph (Voice Monitor)
        $Graph_CurveBlendSelectedColor: setAlpha(white, 0.6);
        $Graph_CurveTransparencyNormal: rgba(white,0.65);
        $Graph_CurveTransparencyMouseOver: rgba(white,1);
        $Graph_CurveTransparencySelected: rgba(white,1);
        
   //-- Wave Editors ------------------------------
        $Graph_Waveform: mix(white, $Graph_BG, 40%);
        $Graph_Waveform_Crossfade_BG: setAlpha($Root_Outset_Color, 0.1);

        $WaveViewerControl_Waveform: gray(10);
        $WaveViewerControl_NonZeroBackground: grayWithAlpha(0, 0.5);
        $WaveViewerControl_Transparency: grayWithAlpha(0, 0.3); // Background of Clip (gets overlayed with transparency)

        $Source_Marker_Line_FromFile: setAlpha($Root_Outset_Color, 0.5);
        $Source_Marker_Line_Manual: setAlpha(hsl(27, 100%, 44%), 0.7);
        $Source_Marker_Line_FromTransient: setAlpha($Curve_Blue, 0.5);
        $Source_Marker_Text: $StructureBorder_Strong;

        $Source_Trim_Start_End_Line: gray(100);
        $Source_DisabledOverlay: setAlpha($Default_BG, 0.5);
        
// -- Multiband Graphs (e.g. Mastering Suite)
        
        // Individual band curve colors
        $MultibandGraph_Band1CurveBase: $Curve_Blue;
        $MultibandGraph_Band2CurveBase: $Curve_Green_Strong;
        $MultibandGraph_Band3CurveBase: $Curve_Pink_Strong;
        $MultibandGraph_Band4CurveBase: $Curve_Purple;
        $MultibandGraph_Band5CurveBase: $Curve_AquaBlue_Strong;
        $MultibandGraph_Band6CurveBase: $Curve_YellowGreen_Strong;
        $MultibandGraph_Band1CurveHighlight: $Curve_Blue_Strong;
        $MultibandGraph_Band2CurveHighlight: darken($Curve_Green_Strong, 0.1);
        $MultibandGraph_Band3CurveHighlight: darken($Curve_Pink_Strong, 0.1);
        $MultibandGraph_Band4CurveHighlight: $Curve_Purple_Strong;
        $MultibandGraph_Band5CurveHighlight: darken($Curve_AquaBlue_Strong, 0.1);
        $MultibandGraph_Band6CurveHighlight: $Curve_YellowGreen_Strong;
        
        // Cumulated curve color
        $MultibandGraph_MainCurveBase: $Curve_Orange_Darkened;
        $MultibandGraph_MainCurveFill: setAlpha($MultibandGraph_MainCurveBase, 0.1);
        
        // State specific colors (mostly for control points)
        $MultibandGraph_SelectionOutline: $Graph_Point_Border_Selected;
        $MultibandGraph_SelectionFill: $Graph_Point_BG_Selected;

        // Multiband compressor
        $MultibandGraph_CrossoverLineBase: $Curve_AquaBlue_Strong;
        $MultibandGraph_CrossoverLineHighlight: mix($MultibandGraph_CrossoverLineBase, $MultibandGraph_SelectionOutline, 50%);
        $MultibandGraph_TransferCurveOutline: $Curve_Blue;
        $MultibandGraph_TransferCurveFill: setAlpha($MultibandGraph_TransferCurveOutline, 0.1);


    //-- Music Editor -------------------------------

        // Music Tracks
        $Track_BG: gray(185);
        $Track_Separator: $StructureBorder;
        $Track_GridLine: gray(165);
        $Track_GridLineWeak: gray(170);

        $Track_Header_Shadow: mix($StructureBorder, $StructureBorder_Mid, 80);

        // For when nothing has been loaded into the Music Editor yet
        $EmptyWidget: $Default_BG;
        
        // Much of the clip uses the $Tray... colors

        $Clip_BG: setAlpha($Tray_TitleBox_BG, 0.3); // Requires alpha
        $Clip_BG_SelectedOverlay: setAlpha($Tray_TitleBox_BG_SelectedOverlay, 0.3); // Requires alpha

        // Alpha is used to specify how much of the border color is blended with the palette color.
        $Clip_Border: setAlpha(mix($Selected_Border, $Tray_Border_Floating, 20%), 0.8);
        $Clip_Border_Selected: setAlpha($Tray_Border_Selected, 1.0);

        $Clip_Wave: setAlpha(gray(15), 0.4);
        $Clip_LoopLine: $Curve_Fade;
        $Clip_Midi_Note: setAlpha(mix($Root_Outset_Color, $Graph_BG, 60%), 0.6);

        // Sequence Sub Panel
        $SubTrackHeader_SequenceBG: mix($Curve_Green, $Default_BG, 25%); //hsl(129, 19%, 60%);
        $SubTrackHeader_SequenceBG_Selected: saturate(lighten($SubTrackHeader_SequenceBG, 20%), 20%); //hsl(129, 43%, 77%);
        // Random Sub Panel
        $SubTrackHeader_RandomBG: mix($Curve_Blue, $Default_BG, 25%); //hsl(214, 31%, 67%);
        $SubTrackHeader_RandomBG_Selected: saturate(lighten($SubTrackHeader_RandomBG, 15%), 30%); // hsl(214, 49%, 81%);
        // Switch Sub Panel
        $SubTrackHeader_SwitchBG: mix($Curve_Yellow, $Default_BG, 25%); //hsl(55, 28%, 54%);
        $SubTrackHeader_SwitchBG_Selected: saturate(lighten($SubTrackHeader_SwitchBG, 15%), 30%); //hsl(58, 59%, 81%);

        //-- Blend Editor -----------------
            $BlendContainerClipBase: setAlpha($Curve_Yellow_Darkened, 1.0);
            $BlendContainerClipBaseFrame: setAlpha($BlendContainerClipBase, 0.4);
            $BlendContainerClipBaseFrameSelected: mix($Selected_BG, $BlendContainerClipBase, 25%);
            $BlendContainerClipBaseCenter: setAlpha($BlendContainerClipBase, 0.15);
            $BlendContainerClipBaseCurve: $BlendContainerClipBase;

            $BlendContainerClipAlternate: $Curve_AquaBlue;
            $BlendContainerClipAlternateFrame: setAlpha($BlendContainerClipAlternate, 0.4);
            $BlendContainerClipAlternateFrameSelected: mix($Selected_BG, $BlendContainerClipAlternate, 25%);
            $BlendContainerClipAlternateCenter: setAlpha($BlendContainerClipAlternate, 0.15);
            $BlendContainerClipAlternateCurve: $BlendContainerClipAlternate;


    //-- Mixing Desk -------------------------------
        $MixingDesk_BG: $Default_BG; // Anything other than $Default_BG shows errors with hovering over the fader in mixing desk
        $MixingDesk_Row_BG: mix($List_Header_BG, $MixingDesk_BG, 60);
        $MixingDesk_Row_Alternate_BG: mix($MixingDesk_Row_BG, $MixingDesk_BG, 30);

    //-- Plugins - Soundseed Grain, Wind & Woosh, Convolution Reverb -----------------------------
        // Top visualization graph
        $SoundseedGrain_Grain: $Root_Outset_Color;
        $SoundseedGrain_PositionCursorLine: $Curve_Green_Saturated;
        $SoundseedGrain_PositionCursorFlag: $Curve_Green_Saturated;
        $SoundseedGrain_PositionCursorFlagBg: $ObjectColor_4;
        $SoundseedGrain_PositionCursorText: $Tray_TitleBox_Text;
        $SoundseedGrain_Marker_Line: $Curve_Blue_Saturated;
        $SoundseedGrain_Marker_Line_Trim: mix($Curve_Blue_Saturated, $Graph_BG, 20%);

        // Bottom Grain Envelope Visualizer
        $SoundseedGrain_MainCurve : setAlpha(mix($Curve_RoyalBlue, $Curve_AquaBlue, 50%), 1);
        $SoundseedGrain_MainCurveFill : setAlpha(mix($Curve_Blue_Lightened, $Curve_AquaBlue, 70), 0.26); 
        $SoundseedGrain_SecondaryCurve : setAlpha(mix($Root_Outset_Color, $Graph_BG, 64%), 0.6);
        $SoundseedGrain_SecondaryCurvesFill : setAlpha(mix($Root_Outset_Color, $Graph_BG, 50%), 0.2);

        // Curve Handle colors use $Graph_FadeHandle

        // For both SoundSeed Wind and Woosh
        $SoundSeed_PannerCircle_BG: gray(110); // Area around panner dot you move around
        $SoundSeed_PannerCircle_Radius: grayWithAlpha(5, 0.06); //Large circle in background the dot moves around on top

        $ConvolutionReverb_IRRectangle: setAlpha($Graph_BG, 0.2);

    //-- 3D View --------------------------------
        $View3D_Disabled_Mix_Percentage: 50%;

        // Object Colors used in acoustic textures
        $View3D_PaletteColorNone: $ObjectColor_None;
        $View3D_PaletteColorNoTexture: mix($Curve_GrayBrown_Weak, $Curve_Gray, 50%);
        $View3D_PaletteColorNoTriangles: $Curve_Gray;
        $View3D_PaletteColor0:  $ObjectColor_None;
        $View3D_PaletteColor1:  $ObjectColor_1;
        $View3D_PaletteColor2:  $ObjectColor_2;
        $View3D_PaletteColor3:  $ObjectColor_3;
        $View3D_PaletteColor4:  $ObjectColor_4;
        $View3D_PaletteColor5:  $ObjectColor_5;
        $View3D_PaletteColor6:  $ObjectColor_6;
        $View3D_PaletteColor7:  $ObjectColor_7;
        $View3D_PaletteColor8:  $ObjectColor_8;
        $View3D_PaletteColor9:  $ObjectColor_9;
        $View3D_PaletteColor10: $ObjectColor_10;
        $View3D_PaletteColor11: $ObjectColor_11;
        $View3D_PaletteColor12: $ObjectColor_12;
        $View3D_PaletteColor13: $ObjectColor_13;

        $View3D_PaletteColor14:  $ObjectColor_14;
        $View3D_PaletteColor15:  $ObjectColor_15;
        $View3D_PaletteColor16:  $ObjectColor_16;
        $View3D_PaletteColor17:  $ObjectColor_17;
        $View3D_PaletteColor18:  $ObjectColor_18;
        $View3D_PaletteColor19:  $ObjectColor_19;
        $View3D_PaletteColor20:  $ObjectColor_20;
        $View3D_PaletteColor21:  $ObjectColor_21;
        $View3D_PaletteColor22:  $ObjectColor_22;
        $View3D_PaletteColor23:  $ObjectColor_23;
        $View3D_PaletteColor24:  $ObjectColor_24;
        $View3D_PaletteColor25:  $ObjectColor_25;
        $View3D_PaletteColor26:  $ObjectColor_26;

        // 3D view Colors for Geometry and Rays etc
        $View3D_Dialog_BG: $Graph_BG;

        // 3D Axis and Grid
        $View3D_Viewport_BG: $Graph_BG;
        $View3D_Grid: $Graph_GridLine;
        $View3D_GridEmphasis: mix($Graph_GridAxis, $Graph_BG, 100%);
        $View3D_Axis_X: $Raw_red_bright;
        $View3D_Axis_Y: $Raw_green_bright;
        $View3D_Axis_Z: $Raw_blue_bright;
        $View3D_Axis_Front: $View3D_Axis_Z;
        $View3D_Axis_Top: $View3D_Axis_Y;
        $View3D_GridText: hsl(0, 0%, 70%);

        // 3D Lights
        $View3D_Light_Diffuse0: hsl(0, 0%, 100%);
        $View3D_Light_Diffuse1: hsl(0, 0%, 31%);
        $View3D_Light_Diffuse2: hsl(0, 0%, 61%);
        $View3D_Light_Ambient:  hsl(0, 0%, 100%);

        // 3D Lights for Audio Object 3D
        $AudioObject3D_Light_Diffuse0:  hsl(0, 0%, 100%);
        $AudioObject3D_Light_Diffuse1:  hsl(0, 0%, 78%);
        $AudioObject3D_Light_Diffuse2:  hsl(0, 0%, 100%);
        $AudioObject3D_Light_Ambient:   hsl(0, 0%, 0%);        

        // Color of listener/emitter objects
        $Listener_Emitter_Alpha: 0.7;
        $View3D_ListenerEmitter: setAlpha($Raw_aqua_bright, $Listener_Emitter_Alpha);
        $View3D_ListenerEmitter_Disabled: setAlpha($View3D_ListenerEmitter, $View3D_Disabled_Mix_Percentage*$Listener_Emitter_Alpha);

        $View3D_Text: $Text_Strongest;

        $View3D_Camera_Text: $Text_Red_Selected;

        $View3D_Attenuation_InvertCone: setAlpha($Curve_Red_Saturated, 0.1);
        $View3D_Attenuation_Cone:       setAlpha($Curve_Red_Saturated, 0.1);
        $View3D_Attenuation_Radius:     setAlpha(mix(white, $View3D_Viewport_BG, 65%), 0.05);

        $View3D_Object: $Text_Strong;
        $View3D_Object_Disabled: setAlpha($View3D_Object, $View3D_Disabled_Mix_Percentage);

        // Dot on the listener and emitter in the 3d viewer
        $Ray_Listener_Emitter_Alpha: 0.7;
        $View3D_Ray_Listener: setAlpha($Raw_aqua_bright, $Ray_Listener_Emitter_Alpha);
        $View3D_Ray_Emitter: setAlpha($Raw_yellow_bright, $Ray_Listener_Emitter_Alpha);
        $View3D_Ray_EmitterInnerSpread: setAlpha($Raw_yellow_pure, 0.25); //alpha is a maximum value, modulated by user preferences slider
        $View3D_Ray_EmitterOuterSpread: setAlpha($Raw_yellow_pure, 0.25); //alpha is a maximum value, modulated by user preferences slider
        $View3D_Ray_Listener_Disabled: setAlpha($View3D_Ray_Listener, $View3D_Disabled_Mix_Percentage*$Ray_Listener_Emitter_Alpha);
        $View3D_Ray_Emitter_Disabled: setAlpha($View3D_Ray_Emitter, $View3D_Disabled_Mix_Percentage*$Ray_Listener_Emitter_Alpha);

        // Geometry diffraction paths
        $Diffraction_Path_Alpha: 0.85;
        $View3D_Ray_DiffractionPath:  setAlpha($Raw_magenta_bright_pastel, $Diffraction_Path_Alpha);
        $View3D_Ray_DiffractionPath_Disabled: setAlpha($View3D_Ray_DiffractionPath, $View3D_Disabled_Mix_Percentage*$Diffraction_Path_Alpha);

        // Sound propagation path color
        $Propagation_Path_Alpha: 0.7;
        $View3D_Ray_PropagationPath: setAlpha($Raw_green_bright, $Propagation_Path_Alpha);
        $View3D_Ray_PropagationPath_Disabled: setAlpha($View3D_Ray_PropagationPath, $View3D_Disabled_Mix_Percentage*$Propagation_Path_Alpha);

        // Direct/transmission paths
        $View3D_Ray_DirectPath: $Raw_aqua_bright;
        $View3D_Ray_TransmissionPath: $Raw_blue_bright_desaturated;

        // Reflection colors
        $Reflection_Ray_Alpha: 0.7;
        $View3D_Ray_ReflectionOrder1: setAlpha($Raw_yellow_pure, $Reflection_Ray_Alpha);
        $View3D_Ray_ReflectionOrder2: setAlpha(hsl(39, 100%, 51%), $Reflection_Ray_Alpha);
        $View3D_Ray_ReflectionOrder3: setAlpha(rgb(255, 113, 47), $Reflection_Ray_Alpha);
        $View3D_Ray_ReflectionOrder4: setAlpha(rgb(255, 72, 47), $Reflection_Ray_Alpha);

        $View3D_Ray_ReflectionOccluded: setAlpha(white, 1.0); // requires a special build of wwise sound engine to see

        $View3D_Ray_ReflectionIdentical: $Curve_RoyalBlue;
        $View3D_Ray_ReflectionMissing: $Curve_Red_Pure;
        $View3D_Ray_ReflectionUnexpected: $Curve_Green_Darkened;
        $View3D_Ray_DiffractionIdentical: $Curve_AquaBlue;
        $View3D_Ray_DiffractionMissing: $Curve_Pink_Lightened;
        $View3D_Ray_DiffractionUnexpected: $Curve_YellowGreen;

        // Portals
        $Portal_Alpha: 0.4;
        $View3DPortal_Enabled:  setAlpha($Raw_green_bright, $Portal_Alpha);
        $View3DPortal_Disabled: setAlpha($View3DPortal_Enabled, $View3D_Disabled_Mix_Percentage*$Portal_Alpha);

        // Different edge types on the 3d wireframe
        $View3D_DiffractionEdge: setAlpha(white, 0.4);
        $View3D_BoundaryEdge:    setAlpha($Raw_blue_bright, 0.7);
        $View3D_MalformedEdge:   setAlpha($Raw_red_bright, 0.7);
        $View3D_RoomEdge: $Raw_magenta_mid;

        // Emitter spread cones
        $SpreadConeAlpha: 0.4;
        $SpreadDomeAlpha: 0.15;

        $View3D_SpreadConeVoice: setAlpha(white, $SpreadConeAlpha);
        $View3D_SpreadDomeVoice: setAlpha(white, $SpreadDomeAlpha);

        // The spatial audio spread cones' alpha is modulated by occlusion/obstruction/diffraction/transmission
        // so the below variables represent the maximum possible alpha.
        $SpreadConeSpatialAudioAlpha: 0.3;
        $SpreadDomeSpatialAudioAlpha: 0.1;

        // Clamps the minimum possilbe alpha value, that is modulated by occlusion/obstruction/diffraction/transmission
        $View3D_SpreadConeDomeSpatialAudioMinAlpha: setAlpha(black, 0.15); // Only alpha is used

        $View3D_SpreadConeDiffractionRay: setAlpha($Raw_magenta_bright, $SpreadConeSpatialAudioAlpha);
        $View3D_SpreadDomeDiffractionRay: setAlpha($Raw_magenta_bright, $SpreadDomeSpatialAudioAlpha);

        $View3D_SpreadConeTransmissionRay: setAlpha($Raw_blue_bright, 2 * $SpreadConeSpatialAudioAlpha);
        $View3D_SpreadDomeTransmissionRay: setAlpha($Raw_blue_bright, 2 * $SpreadDomeSpatialAudioAlpha);

        $View3D_SpreadConePortalRay: setAlpha($Raw_green_bright, $SpreadConeSpatialAudioAlpha);
        $View3D_SpreadDomePortalRay: setAlpha($Raw_green_bright, $SpreadDomeSpatialAudioAlpha);

        $View3D_SpreadConeRadialEmitter: setAlpha( $Raw_yellow_bright, 0.7 * $SpreadConeSpatialAudioAlpha);
        $View3D_SpreadDomeRadialEmitter: setAlpha( $Raw_yellow_bright, 0.7 * $SpreadDomeSpatialAudioAlpha);

        // Increase the transparency of the spread cones, as the spread angle increases.
        // Sets the minimum alpha multiplier of the spread cone, when the angle is 100%. When spread is 0%, the alpha is unmodified.
        $View3D_SpreadConeAngleToAlpha: setAlpha(black, 0.05); // Only alpha is used
        $View3D_SpreadDomeAngleToAlpha: setAlpha(black, 0.2); // Only alpha is used

        $View3D_AudioObject3D_ObjectLine: setAlpha(white, 0.6);
        $View3D_AudioObject3D_ObjectLineHighlight: setAlpha(white, 1);
        $View3D_AudioObject3D_Head: rgb(161, 161, 161);
        $View3D_AudioObject3D_HeadEars: rgb(65, 65, 65);
        $View3D_AudioObject3D_Sphere: rgba(10, 10, 10, 0.7);
        $View3D_AudioObject3D_SphereIsoline: rgb(255, 255, 255);
        $View3D_AudioObject3D_SpreadSelected: setAlpha(rgb(255, 255, 0), 0.80);
        $View3D_AudioObject3D_SpreadUnselected: setAlpha(rgb(0, 255, 0), 0.35);
        $View3D_AudioObject3D_SpreadUnselectedMultiplier: rgba(255, 255, 255, 0.25);
        $View3D_AudioObject3D_SpreadSelectedMultiplier:   rgba(255, 255, 255, 0.6);
        $View3D_AudioObject3D_LineInSphereMultiplier:   rgba(255, 255, 255, 0.4);
		$View3D_AudioObject3D_UnselectedBlendColor: setAlpha($View3D_Viewport_BG, 0.15);
        $View3D_AudioObject3D_UnselectedBlendIconColor: setAlpha($View3D_Viewport_BG, 0.4);
        $View3D_AudioObject3D_SelectedBlendColor: setAlpha(white, 0.2);
		$View3D_AudioObject3D_SelectedBlendIconColor: setAlpha(white, 0.2);
        
    // Additional Variables to support inconsistencies in Classic Theme
        $PropertyHelp_BG: $List_BG;
        $PropertyHelp_Text: black;

        $Main_TitleBar_BG: gray(213);

        $GroupBox_Border_Shadow: gray(131);

        $Caption_BG: gray(153);
        $Caption_Border: gray(120);
        $Caption_Text: gray(40);
        $Caption_Text_Disabled: mix($Caption_Text, $Field_BG, 50%);

        // For Overlay when nothing is in the graph
        $RTPC_Graph_BG: gray(183);
        $RTPC_Graph_BG_Outside: gray(183);
        $RTPC_Graph_BG_Empty_Overlay: gray(161);
        $RTPC_Graph_GridLine: gray(153);
        $RTPC_Graph_GridAxis: gray(64);

        $RTPC_Ruler_BG: $RTPC_Graph_BG;
        $RTPC_Ruler_TickLarge: $RTPC_Graph_GridLine;
        $RTPC_Ruler_TickSmall: $RTPC_Graph_GridLine;
        $RTPC_Ruler_Text: gray(64);
        $RTPC_Ruler_AxisTextColor: $RTPC_Ruler_Text;

        $RTPC_Graph_Waveform: gray(70);

        $Dialog_NumberedButton_Text: black;
        $Dialog_NumberedButton_Text_Hovered: $Dialog_NumberedButton_Text;
        $Dialog_NumberedButton_Text_Disabled: mix($Dialog_NumberedButton_Text, $Default_BG, 30%);

        $MixingDesk_SideHeader_BG: mix($Tray_TitleBox_BG, $MixingDesk_BG, 70%);
        $MixingDesk_SideHeader_Child_BG: $Tray_TitleBox_BG;

        $MusicClip_FadeCurve: darken($Curve_Fade, 30);

        // This is for the external wave viewer, the colors get loaded at startup and are never reloaded
        // Since currently the dark theme is the default loaded theme the colors used in the
        // external  wave viewer will be the colors from the dark theme only
        $ExternalWaveEditor_DiffNonZero_BG: setAlpha(rgb(188, 130, 36), 0.5);
        $ExternalWaveEditor_DiffWave_Default:  gray(65);
        $ExternalWaveEditor_DiffWave:  black;
